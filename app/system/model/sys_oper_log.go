// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

import (
	"github.com/gogf/gf/os/gtime"
)

// SysOperLog is the golang structure for table sys_oper_log.
type SysOperLog struct {
	OperId        uint64      `orm:"oper_id,primary" json:"operId"`        // 日志主键
	Title         string      `orm:"title"           json:"title"`         // 模块标题
	BusinessType  int         `orm:"business_type"   json:"businessType"`  // 业务类型（0其它 1新增 2修改 3删除）
	Method        string      `orm:"method"          json:"method"`        // 方法名称
	RequestMethod string      `orm:"request_method"  json:"requestMethod"` // 请求方式
	OperatorType  int         `orm:"operator_type"   json:"operatorType"`  // 操作类别（0其它 1后台用户 2手机端用户）
	OperName      string      `orm:"oper_name"       json:"operName"`      // 操作人员
	DeptName      string      `orm:"dept_name"       json:"deptName"`      // 部门名称
	OperUrl       string      `orm:"oper_url"        json:"operUrl"`       // 请求URL
	OperIp        string      `orm:"oper_ip"         json:"operIp"`        // 主机地址
	OperLocation  string      `orm:"oper_location"   json:"operLocation"`  // 操作地点
	OperParam     string      `orm:"oper_param"      json:"operParam"`     // 请求参数
	JsonResult    string      `orm:"json_result"     json:"jsonResult"`    // 返回参数
	Status        int         `orm:"status"          json:"status"`        // 操作状态（0正常 1异常）
	ErrorMsg      string      `orm:"error_msg"       json:"errorMsg"`      // 错误消息
	OperTime      *gtime.Time `orm:"oper_time"       json:"operTime"`      // 操作时间
}
