// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// SysOperLogDao is the manager for logic model data accessing and custom defined data operations functions management.
type SysOperLogDao struct {
	gmvc.M                   // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      sysOperLogColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB            // DB is the raw underlying database management object.
	Table  string            // Table is the underlying table name of the DAO.
}

// SysOperLogColumns defines and stores column names for table sys_oper_log.
type sysOperLogColumns struct {
	OperId        string // 日志主键
	Title         string // 模块标题
	BusinessType  string // 业务类型（0其它 1新增 2修改 3删除）
	Method        string // 方法名称
	RequestMethod string // 请求方式
	OperatorType  string // 操作类别（0其它 1后台用户 2手机端用户）
	OperName      string // 操作人员
	DeptName      string // 部门名称
	OperUrl       string // 请求URL
	OperIp        string // 主机地址
	OperLocation  string // 操作地点
	OperParam     string // 请求参数
	JsonResult    string // 返回参数
	Status        string // 操作状态（0正常 1异常）
	ErrorMsg      string // 错误消息
	OperTime      string // 操作时间
}

// NewSysOperLogDao creates and returns a new DAO object for table data access.
func NewSysOperLogDao() *SysOperLogDao {
	columns := sysOperLogColumns{
		OperId:        "oper_id",
		Title:         "title",
		BusinessType:  "business_type",
		Method:        "method",
		RequestMethod: "request_method",
		OperatorType:  "operator_type",
		OperName:      "oper_name",
		DeptName:      "dept_name",
		OperUrl:       "oper_url",
		OperIp:        "oper_ip",
		OperLocation:  "oper_location",
		OperParam:     "oper_param",
		JsonResult:    "json_result",
		Status:        "status",
		ErrorMsg:      "error_msg",
		OperTime:      "oper_time",
	}
	return &SysOperLogDao{
		C:     columns,
		M:     g.DB("default").Model("sys_oper_log").Safe(),
		DB:    g.DB("default"),
		Table: "sys_oper_log",
	}
}
